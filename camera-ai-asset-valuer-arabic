<!-- كاميرا → تقييم → حفظ (واجهة عربية كاملة + ترجمة قبل العرض) -->
<div id="valuationWidget" dir="rtl" style="--bg:#ffffff; --text:#7A7A7A; --accent:#FC6481; --accentHover:#e65376; --border:#e5e5e5; --maxw:640px; width:100%;">

  <!-- فتح الكاميرا -->
  <button id="cameraOpenBtn" type="button" class="aligned-btn"
          style="cursor:pointer; display:flex; justify-content:center; align-items:center; gap:10px;
                 background:var(--accent); color:#fff; border:1px solid var(--accent);
                 padding:14px 16px; border-radius:10px; font-weight:600;">
    <svg width="22" height="22" viewBox="0 0 24 24" aria-hidden="true"><path d="M9.5 4.5 8 6H5a3 3 0 0 0-3 3v7a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V9a3 3 0 0 0-3-3h-3l-1.5-1.5h-5Zm2.5 13.5a5 5 0 1 1 0-10 5 5 0 0 1 0 10Z" fill="currentColor"/></svg>
    <span id="cameraOpenLbl">فتح الكاميرا</span>
  </button>

  <!-- منصة الكاميرا -->
  <div id="cameraDock" class="hidden"
       style="position:fixed; z-index:9999; top:0; left:50%; transform:translateX(-50%);
              width:100vw; padding:env(safe-area-inset-top) 12px 12px; box-sizing:border-box; background:var(--bg);">
    <div style="max-width:var(--maxw); margin:0 auto;">
      <div id="cameraStage" style="position:relative; width:100%; border-radius:12px; overflow:hidden; background:#000;">
        <video id="video" playsinline muted autoplay style="width:100%; height:auto; display:block;"></video>
        <img id="photo" alt="لقطة" style="position:absolute; inset:0; width:100%; height:100%; object-fit:cover; display:none; z-index:2; pointer-events:none;">
      </div>
      <div style="display:flex; gap:12px; margin-top:10px; flex-direction:row-reverse;">
        <button id="cancelBtn" class="btnGhost" style="flex:1 1 50%; background:#fff; color:var(--text); border:1px solid var(--border); padding:12px 14px; border-radius:10px; font-weight:600;">إلغاء</button>
        <button id="actionBtn" class="btnPrimary" style="flex:1 1 50%; background:var(--accent); color:#fff; border:1px solid var(--accent); padding:12px 14px; border-radius:10px; font-weight:600;">التقاط</button>
      </div>
      <div id="errorBox" style="display:none; margin-top:10px; color:#7A7A7A; background:#ffe8ee; border:1px solid var(--accent); border-radius:8px; padding:10px 12px;"></div>
    </div>
  </div>

  <!-- نموذج التقييم (يُملأ بالعربية) -->
  <div id="valuationForm" class="hidden"
       style="background:var(--bg); color:var(--text); border:1px solid var(--border); border-radius:10px; padding:16px; max-width:var(--maxw); margin:12px auto 0;">
    <form id="valuationFormEl" action="#" method="post" onsubmit="validateForm(event)" style="margin:0;">
      <p><input type="text" id="text1" placeholder="الفئة" name="category" class="input" dir="rtl" style="text-align:right;"></p>
      <p><input type="text" id="text2" placeholder="العلامة التجارية" name="brand" class="input" dir="rtl" style="text-align:right;"></p>
      <p><input type="text" id="text3" placeholder="الطراز" name="model" class="input" dir="rtl" style="text-align:right;"></p>
      <p><textarea id="text4" placeholder="المواصفات" name="specs" rows="3" class="input textarea" dir="rtl" style="text-align:right;"></textarea></p>
      <p><input type="text" id="text5" placeholder="£450–£550" name="valuation_gbp" class="input" dir="rtl" style="text-align:right;"></p>

      <p id="actionsRow" style="display:flex; gap:8px; flex-wrap:nowrap; margin-top:10px; flex-direction:row-reverse;">
        <button type="button" onclick="cancelForm()" class="btnGhost flexThird">إلغاء</button>
        <button type="button" id="editVals" class="btnSecondary flexThird">تحرير</button>
        <input id="addBtn" type="submit" value="إضافة" class="btnPrimary flexThird" style="background:var(--accent); color:#fff; border:1px solid var(--accent);">
      </p>

      <div id="valuationMeta" style="margin-top:12px; display:none; color:var(--text);" dir="rtl"></div>
      <div id="formErrorBox" style="display:none; margin-top:10px; color:#7A7A7A; background:#fff3cd; border:1px solid #ffe08a; border-radius:8px; padding:10px 12px;" dir="rtl"></div>
      <div id="formSuccessBox" style="display:none; margin-top:10px; color:#155724; background:#d4edda; border:1px solid #c3e6cb; border-radius:8px; padding:10px 12px;" dir="rtl"></div>
    </form>
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Work+Sans:wght@400;600&display=swap');
  #valuationWidget, #valuationWidget *:not(svg):not(path){
    font-family: "Work Sans", system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial, sans-serif;
    font-weight: 400;
  }

  .hidden{ display:none !important; }
  #valuationWidget .aligned-btn{ width:100%; max-width:var(--maxw); margin:12px auto; box-sizing:border-box; }
  #valuationWidget .aligned-btn:hover{ background:var(--accentHover); border-color:var(--accentHover); }
  #valuationWidget .input{ background:#fff; color:var(--text); border:1px solid var(--border); padding:10px 12px; border-radius:8px; width:100%; box-sizing:border-box; outline:0; }
  #valuationWidget .textarea{ min-height:84px; line-height:1.4; resize:vertical; }
  #valuationWidget .input:focus{ border-color:var(--accent); box-shadow:0 0 0 3px rgba(252,100,129,.15); }
  .btnPrimary{ background:var(--accent); color:#fff; border:1px solid var(--accent); padding:12px 14px; border-radius:10px; cursor:pointer; font-weight:600; }
  .btnPrimary:hover{ background:var(--accentHover); border-color:var(--accentHover); }
  .btnSecondary, .btnGhost{ background:#fff; color:#7A7A7A; border:1px solid var(--border); padding:12px 14px; border-radius:10px; cursor:pointer; font-weight:600; }
  .loading{ opacity:.9; pointer-events:none; }
  .dots{ display:inline-block; width:1.5em; text-align:left; }
  .dots span{ display:inline-block; width:.33em; animation:blink 1s infinite; }
  .dots span:nth-child(2){ animation-delay:.2s; } .dots span:nth-child(3){ animation-delay:.4s; }
  @keyframes blink{ 0%,20%{opacity:0} 50%{opacity:1} 100%{opacity:0} }
  .flexThird{ flex:1 1 33.333%; }
  @media (max-width:360px){ #actionsRow{ flex-wrap:wrap; } .flexThird{ flex:1 1 100%; } }
  body.noscroll{ overflow:hidden; height:100vh; }
</style>

<script>
(function(){
  const STR = {
    openCamera: 'فتح الكاميرا',
    take: 'التقاط',
    getVal: 'احصل على التقييم',
    valuing: 'جارٍ التقييم',
    translating: 'جارٍ الترجمة…',
    saving: 'جارٍ الحفظ…',
    saved: 'تم الحفظ ✓',
    cancel: 'إلغاء',
    edit: 'تحرير',
    add: 'إضافة',
    camError: 'خطأ في أذونات الكاميرا.',
    noPhoto: 'لا توجد صورة للحفظ. يُرجى الالتقاط أولًا.',
    savedArabic: 'تم حفظ الأصل باللغة العربية.',
    confidence: 'مستوى الثقة',
    notes: 'ملاحظات',
  };

  let video, photo, dock, openBtn, cancelBtn, actionBtn, valuationForm, valuationMeta, errorBox, addBtn, formErrorBox, formSuccessBox;
  let mode='take', hasCapture=false, lastCapture='', lastLowValue=null, lastHighValue=null, lastConfidence=null, lastNotes='';
  const widget=document.getElementById('valuationWidget');
  const dataset=widget?.dataset||{};
  const currencyCode=(dataset.aiavCurrency||'GBP').toUpperCase();
  const currencyKey=currencyCode.toLowerCase();
  const languageCode=(dataset.aiavLanguage||'ar').toLowerCase();
  const locale=dataset.aiavLocale||resolveLocale(languageCode);
  const currencyFormatter=createCurrencyFormatter(currencyCode, locale);
  const valuationFieldName=`valuation_${currencyKey}`;
  const priceLowField=`price_low_${currencyKey}`;
  const priceHighField=`price_high_${currencyKey}`;
  const isMobile=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
  const q=id=>document.getElementById(id);

  const REST_BASES=[
    (window?.wpApiSettings?.root||'/wp-json/').replace(/\/?$/,'/')+'aiaas/v1/',
    '/wp-json/aiaas/v1/',
    location.origin+'/index.php?rest_route=/aiaas/v1/'
  ].filter((v,i,a)=>a.indexOf(v)===i);
  const apiURL = ep => REST_BASES.map(b=>b+ep);

  const AR_CODE = languageCode || 'ar';
  const SOURCE_LANG = (dataset.sourceLanguage || 'en').toLowerCase();

  async function tryFetchJSON(urls, opts){
    let lastErr=null, lastText='';
    for(const u of urls){
      try{
        const r=await fetch(u,opts);
        lastText=await r.text().catch(()=> '');
        if(r.ok){
          try{ return JSON.parse(lastText||'{}'); }
          catch(_){ return (lastText||''); }
        }
        lastErr=new Error(`${opts?.method||'GET'} ${u} -> ${r.status}: ${lastText}`);
      }catch(e){
        lastErr=e;
      }
    }
    throw lastErr || new Error('All REST bases failed');
  }

  document.addEventListener('DOMContentLoaded', ()=>{
    cache();
    q('cameraOpenLbl').textContent = STR.openCamera;
    actionBtn.textContent = STR.take;
    cancelBtn.textContent = STR.cancel;
    q('editVals').textContent = STR.edit;
    addBtn.value = STR.add;

    const valuationInput=q('text5');
    if(valuationInput){
      valuationInput.name=valuationFieldName;
      valuationInput.placeholder=formatCurrency({low:450, high:550});
    }

    openBtn.addEventListener('click', openCamera);
    cancelBtn.addEventListener('click', cancelCamera);
    actionBtn.addEventListener('click', handleAction);
    q('editVals').addEventListener('click', ()=>['text1','text2','text3','text4','text5'].forEach(id=>q(id).readOnly=false));
  });

  function cache(){
    video=q('video'); photo=q('photo'); dock=q('cameraDock');
    openBtn=q('cameraOpenBtn'); cancelBtn=q('cancelBtn'); actionBtn=q('actionBtn');
    valuationForm=q('valuationForm'); valuationMeta=q('valuationMeta'); errorBox=q('errorBox');
    formErrorBox=q('formErrorBox'); formSuccessBox=q('formSuccessBox'); addBtn=q('addBtn');
  }

  async function openCamera(){
    try{
      const constraints=isMobile?{ video:{ facingMode:'environment' }}:{ video:true };
      const stream=await navigator.mediaDevices.getUserMedia(constraints);
      video.srcObject=stream;
      document.body.classList.add('noscroll');
      dock.classList.remove('hidden');
      openBtn.classList.add('hidden');
      window.scrollTo({ top:0, left:0, behavior:'auto' });
      setMode('take'); hasCapture=false; photo.style.display='none';
    }catch(e){
      showDockError(STR.camError);
      console.error(e);
    }
  }
  function stopStream(){
    const s=video?.srcObject;
    if(s){
      try{s.getTracks().forEach(t=>t.stop());}catch(_){/* ignore */}
    }
    if(video){ video.srcObject=null; video.src=''; }
  }
  function cancelCamera(){
    stopStream();
    document.body.classList.remove('noscroll');
    dock.classList.add('hidden');
    openBtn.classList.remove('hidden');
    photo.style.display='none';
    hasCapture=false;
    setMode('take');
  }
  function setMode(m){
    mode=m;
    actionBtn.classList.remove('loading');
    actionBtn.disabled=false;
    actionBtn.textContent = (m==='take'? STR.take : STR.getVal);
    actionBtn.className='btnPrimary';
  }
  function setLoading(on){
    if(on){
      actionBtn.disabled=true;
      actionBtn.classList.add('loading');
      actionBtn.innerHTML = `${STR.valuing}<span class="dots"><span>.</span><span>.</span><span>.</span></span>`;
    }else{
      actionBtn.disabled=false;
      actionBtn.classList.remove('loading');
      actionBtn.textContent = (mode==='take'? STR.take : STR.getVal);
    }
  }
  function handleAction(){
    if(mode==='take'){
      doCapture();
      setMode('value');
    }else{
      setLoading(true);
      getValuationArabic().catch(err=>showDockError(err?.message||String(err))).finally(()=>setLoading(false));
    }
  }

  function doCapture(){
    clearDockError();
    clearFormMessages();
    const c=document.createElement('canvas');
    const vw=video.videoWidth||1280, vh=video.videoHeight||720;
    const maxW=1280, scale=Math.min(1, maxW/vw);
    c.width=Math.round(vw*scale);
    c.height=Math.round(vh*scale);
    c.getContext('2d').drawImage(video,0,0,c.width,c.height);
    lastCapture=c.toDataURL('image/jpeg',0.75);
    photo.src=lastCapture;
    photo.style.display='block';
    hasCapture=true;
    try{ video.pause(); }catch(_){/* ignore */}
  }

  function toSpecsString(s){
    if(!s) return '';
    if(typeof s==='string') return s;
    if(Array.isArray(s)) return s.filter(Boolean).join(', ');
    if(typeof s==='object'){
      return Object.entries(s)
        .filter(([,v])=>v!=null&&v!=='')
        .map(([k,v])=>typeof v==='object'?`${k}: ${toSpecsString(v)}`:`${k}: ${v}`)
        .join(', ');
    }
    return String(s);
  }
  function extractNumber(x){
    if(typeof x==='number'&&isFinite(x)) return x;
    if(typeof x==='string'){
      const s=x.replace(/,/g,'');
      const m=s.match(/-?\d+(?:\.\d+)?/);
      return m?parseFloat(m[0]):NaN;
    }
    if(Array.isArray(x)){
      for(const it of x){
        const n=extractNumber(it);
        if(!isNaN(n)) return n;
      }
      return NaN;
    }
    if(x&&typeof x==='object'){
      const pref=['amount','value','price','avg','average','median'];
      for(const k of pref){
        if(k in x){
          const n=extractNumber(x[k]);
          if(!isNaN(n)) return n;
        }
      }
      for(const v of Object.values(x)){
        const n=extractNumber(v);
        if(!isNaN(n)) return n;
      }
    }
    return NaN;
  }
  function extractRange(v){
    if(v&&typeof v==='object'){
      for(const [a,b] of [['low','high'],['min','max'],['from','to']]){
        if(a in v||b in v){
          return {lo:extractNumber(v[a]), hi:extractNumber(v[b])};
        }
      }
    }
    if(Array.isArray(v)&&v.length>=2){
      return {lo:extractNumber(v[0]), hi:extractNumber(v[1])};
    }
    if(typeof v==='string'){
      const s=v.replace(/,/g,'').trim();
      const m=s.match(/(\d+(?:\.\d+)?)\s*(?:-|–|to)\s*(\d+(?:\.\d+)?)/i);
      if(m){
        return {lo:parseFloat(m[1]), hi:parseFloat(m[2])};
      }
      const n=extractNumber(v);
      return {lo:n, hi:NaN};
    }
    const n=extractNumber(v);
    return {lo:n, hi:NaN};
  }
  function formatCurrency(v){
    const {lo,hi}=extractRange(v);
    const okLo=Number.isFinite(lo);
    const okHi=Number.isFinite(hi);
    if(okLo&&okHi) return `${formatAmount(lo)} – ${formatAmount(hi)}`;
    if(okLo) return formatAmount(lo);
    if(v&&typeof v==='object') return JSON.stringify(v);
    return typeof v==='string'?v:'';
  }
  function formatAmount(value){
    const num=Number(value);
    if(Number.isFinite(num)){
      try{
        const formatted=currencyFormatter.format(num);
        if(formatted && formatted!==String(num)){
          return formatted;
        }
      }catch(_){/* ignore */}
      return `${currencyCode} ${num.toFixed(2)}`;
    }
    return typeof value==='string'?value:'';
  }
  function resolveLocale(lang){
    if(!lang) return 'ar';
    if(lang==='ar') return 'ar';
    if(lang==='en') return 'en-GB';
    return lang;
  }
  function createCurrencyFormatter(code, loc){
    try{
      return new Intl.NumberFormat(loc||undefined,{style:'currency',currency:code});
    }catch(e){
      try{
        return new Intl.NumberFormat(undefined,{style:'currency',currency:code});
      }catch(_){
        return new Intl.NumberFormat();
      }
    }
  }

  async function requestValuation(dataUrl){
    const headers={'Content-Type':'application/json'};
    const nonce=window?.wpApiSettings?.nonce;
    if(nonce) headers['X-WP-Nonce']=nonce;
    const body={ image:dataUrl, currency:currencyCode, language:languageCode };
    return tryFetchJSON(apiURL('value-image'), { method:'POST', headers, body:JSON.stringify(body) });
  }

  async function translateAR(text){
    const payload = { text:String(text||''), target:AR_CODE, source:SOURCE_LANG||'', format:'text' };
    const headers = { 'Content-Type':'application/json' };
    const urls = apiURL('translate');
    try{
      const res = await tryFetchJSON(urls, { method:'POST', headers, body:JSON.stringify(payload), credentials:'same-origin' });
      const out = res?.result?.translated_text;
      return (typeof out==='string' && out.trim()!=='') ? out : String(text||'');
    }catch(_){
      return String(text||'');
    }
  }

  async function getValuationArabic(){
    if(!hasCapture) doCapture();
    const result = await requestValuation(lastCapture);

    const srcCategory = result.category || '';
    const srcBrand    = result.brand || '';
    const srcModel    = result.model || '';
    const srcSpecs    = toSpecsString(result.specs);
    const srcNotesRaw = (result.notes && typeof result.notes==='object') ? JSON.stringify(result.notes) : (result.notes || '');

    const [arCategory, arBrand, arModel, arSpecs, arNotes] = await Promise.all([
      translateAR(srcCategory),
      translateAR(srcBrand),
      translateAR(srcModel),
      translateAR(srcSpecs),
      translateAR(srcNotesRaw)
    ]);

    q('text1').value = arCategory;
    q('text2').value = arBrand;
    q('text3').value = arModel;
    q('text4').value = arSpecs;

    const valuationInput=q('text5');
    const rangeSource={
      low: result[priceLowField] ?? result.price_low ?? result.price_low_gbp ?? null,
      high: result[priceHighField] ?? result.price_high ?? result.price_high_gbp ?? null,
    };
    const normalized=extractRange(rangeSource);
    lastLowValue = Number.isFinite(normalized.lo) ? normalized.lo : null;
    lastHighValue = Number.isFinite(normalized.hi) ? normalized.hi : null;

    const directVal = result[valuationFieldName] ?? result[`price_${currencyKey}`];
    const fallbackVal = result.valuation ?? result.price ?? result.valuation_gbp ?? result.price_gbp ?? directVal;
    const valueForInput = (lastLowValue!=null || lastHighValue!=null)
      ? { low:lastLowValue, high:lastHighValue }
      : (directVal ?? fallbackVal ?? '');

    if(valuationInput){
      valuationInput.value = formatCurrency(valueForInput);
    }

    lastConfidence = (typeof result.confidence==='number' && isFinite(result.confidence)) ? result.confidence : null;
    lastNotes = arNotes;

    valuationMeta.style.display='block';
    valuationMeta.innerHTML=`<div><strong style="color:var(--text)">${STR.confidence}:</strong> ${lastConfidence!=null? lastConfidence.toFixed(2) : '—'}</div><div><strong style="color:var(--text)">${STR.notes}:</strong> ${lastNotes || '—'}</div>`;

    ['text1','text2','text3','text4','text5'].forEach(id=>q(id).readOnly=true);

    stopStream();
    document.body.classList.remove('noscroll');
    dock.classList.add('hidden');
    valuationForm.classList.remove('hidden');
    valuationForm.scrollIntoView({behavior:'smooth', block:'start'});
  }

  window.validateForm = async function(e){
    e.preventDefault();
    clearFormMessages();
    if(!lastCapture){
      showFormError(STR.noPhoto);
      return;
    }
    const button=q('addBtn');
    const original=button.value||STR.add;
    button.disabled=true;
    button.value=STR.saving;
    try{
      const valuationInput=q('text5');
      const rawValuation=(valuationInput?.value||'').trim();
      const payload={
        image:lastCapture,
        currency:currencyCode,
        language:languageCode,
        category:(q('text1').value||'').trim(),
        brand:(q('text2').value||'').trim(),
        model:(q('text3').value||'').trim(),
        specs:(q('text4').value||'').trim(),
        custom_fields:{ Language:'Arabic', LanguageCode:languageCode || 'ar', Currency:currencyCode }
      };
      payload[valuationFieldName]=rawValuation;
      if(lastLowValue!=null) payload[priceLowField]=lastLowValue;
      if(lastHighValue!=null) payload[priceHighField]=lastHighValue;
      if(lastConfidence!=null) payload.confidence=lastConfidence;
      if(lastNotes) payload.notes=lastNotes;

      const headers={'Content-Type':'application/json'};
      const nonce=window?.wpApiSettings?.nonce;
      if(nonce) headers['X-WP-Nonce']=nonce;
      const data = await tryFetchJSON(apiURL('save-asset'), { method:'POST', headers, body:JSON.stringify(payload) });

      showFormSuccess(STR.savedArabic + (data?.link? ` <a href="${data.link}">عرض</a>` : ''));
      button.value=STR.saved;

      const table=document.getElementById('aiaasTable');
      if(table){
        const tbody=table.querySelector('tbody')||table;
        const tr=document.createElement('tr');
        const title = ((payload.brand + ' ' + payload.model).trim()) || payload.category || 'أصل';
        const valuationDisplay = rawValuation || formatCurrency({ low:lastLowValue, high:lastHighValue });
        const arDate = new Intl.DateTimeFormat(locale||'ar',{year:'numeric',month:'2-digit',day:'2-digit'}).format(new Date());
        tr.innerHTML=`
          <td><img src="${lastCapture}" class="aiaas-thumb" alt=""></td>
          <td dir="rtl">${escapeHtml(title)}</td>
          <td class="aiaas-hide-sm" dir="rtl">${escapeHtml(payload.category||'')}</td>
          <td dir="rtl">${escapeHtml(payload.brand||'')}</td>
          <td dir="rtl">${escapeHtml(payload.model||'')}</td>
          <td class="aiaas-hide-sm" dir="rtl">${escapeHtml(payload.specs||'')}</td>
          <td dir="rtl">${escapeHtml(valuationDisplay||'')}</td>
          <td class="aiaas-hide-sm">${lastConfidence!=null? String(lastConfidence) : '—'}</td>
          <td class="aiaas-hide-sm">${arDate}</td>`;
        tbody.insertBefore(tr, tbody.firstChild);
      }
    }catch(err){
      console.error(err);
      showFormError(err?.message || String(err));
      button.value=original;
      button.disabled=false;
      return;
    }
    setTimeout(()=>{ button.disabled=false; }, 1200);
  };

  function showDockError(msg){ errorBox.style.display='block'; errorBox.textContent=msg; }
  function clearDockError(){ errorBox.style.display='none'; errorBox.textContent=''; }
  function showFormError(msg){ formErrorBox.style.display='block'; formErrorBox.innerHTML=sanitizeHtml(msg); }
  function showFormSuccess(msg){ formSuccessBox.style.display='block'; formSuccessBox.innerHTML=sanitizeHtml(msg); }
  function clearFormMessages(){ formErrorBox.style.display='none'; formErrorBox.textContent=''; formSuccessBox.style.display='none'; formSuccessBox.textContent=''; }
  function escapeHtml(s){ return String(s).replace(/[&<>"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m])); }
  function sanitizeHtml(s){ return String(s).replace(/<(?!\/?a(\s|>))/g,'&lt;').replace(/javascript:/gi,''); }

  window.cancelForm=function(){ location.reload(); };
})();
</script>

